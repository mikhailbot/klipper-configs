[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X150 Y150 Z30 F3600

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED = params.BED|default(100)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(240)|float %}
    {% set SOAK = params.SOAK|default(10)|float %}

    # Set bed temperature and partial nozzle temperature, turn on part cooling for heating chamber
    {% if EXTRUDER >= 230 %}
      M140 S{BED}
      M104 S150
      M106 S255
    {% else %}
      M140 S{BED}
      M104 S125
      M106 S255
    {% endif %}

    # Home XYZ and park in middle of bed
    G28
    G90
    PARKCENTER    

    # Wait for temperature
    M117 Warming Up
    M190 S{BED}
    
    # soak for defined number of minutes, default is 10m
    # originally from VinS#0204
    {% if (SOAK|int) > 0 %}
        M117 Starting Soak
        {% for timer in range( SOAK|int,0,-1) %}   ; we cycle once a minute, so we can send an update
            M117 Soak: {timer|int}m remaining
            M105
            G4 P60000 # wait 1 minute
        {% endfor %}
        M117 Soak Complete
        M106 S0
    {% endif %}

    # Home, QGL, create bed mesh   
    M117 Leveling Out
    G32
    M117 Meshing Things
    BED_MESH_CALIBRATE   

    # Locate over purge bucket
    G90
    G0 X33.50 Y310 Z10 F9000

    # Heat up nozzle and clean off
    M109 S{EXTRUDER}
    CLEAN_NOZZLE
    
    ADAPTIVE_PURGE 

    M117 Printing...


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-12 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z2.00 X5.0 Y5.0 F20000      ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G0 Z5 F3000                    ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x - 5} Y{printer.toolhead.axis_maximum.y - 5} F19500.0      ; park nozzle at rear
    UPDATE_DELAYED_GCODE ID=NEVERMORE_OFF DURATION=1800
    M117 Print finished...

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT

# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
	# Parameters
	{% set z = params.Z|default(10)|int %}																					; z hop amount
	
	{% if printer['pause_resume'].is_paused|int == 0 %}
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}									    						; set z hop variable for reference in resume macro
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}									; set hotend temp variable for reference in resume macro
	
		SAVE_GCODE_STATE NAME=PAUSE						
		BASE_PAUSE																											; pause print
		G91																													; relative positioning
		G1 Z{z} F900																										; raise Z up by z hop amount
		G90																													; absolute positioning
		G1 XG0 X{printer.toolhead.axis_maximum.x/2} YG0 Y{printer.toolhead.axis_minimum.y+10} F19500						; park toolhead at front center
		M104 S0																												; turn off hotend
		SET_IDLE_TIMEOUT TIMEOUT=43200															    						; set timeout to 12 hours
	{% endif %}

# Return Z hop back down 10mm, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
	# Parameters
	{% set e = params.E|default(2.5)|int %}																				; nozzle prime amount
	
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}											; set timeout back to configured value
	M109 S{etemp|int}																									; wait for hotend to heat back up
	G91																													; relative positioning
	{% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}												
		G1 Z{zhop * -1} E{e} F900																						; prime nozzle by E, lower Z back down
	{% else %}						
		G1 Z{zhop * -1} F900																							; lower Z back down	without priming
	{% endif %}								
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450																; restore position
	BASE_RESUME																											; resume print

# Filament runout / change alias	
[gcode_macro M600]
gcode:
	PAUSE

[gcode_macro FILAMENT_LOAD]
gcode:
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G92 E0.0
    G1 E25 F2000
    G1 E99 F300
    G1 E99 F300
    G1 E-12 F3600
    G92 E0.0
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

[gcode_macro FILAMENT_UNLOAD]
gcode:
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E15 F600
    G1 E-50 F2000
    G92 E0.0
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

[gcode_macro FILAMENT_PURGE]
gcode:
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G92 E0.0
    G1 E99 F300
    G1 E-12 F3600
    G92 E0.0
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

######################### CONDITIONAL HOMING #########################

# Conditional G28 XYZ (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}
	
# Conditional G28 XY (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}

# Conditional G28 Z (home if not already homed)
[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}
	
######################### PARKING #########################

# Park front center
[gcode_macro PARKFRONT]
gcode:
	CG28                                  																						
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} Z{printer.toolhead.axis_maximum.z/2} F19500		
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} Z20 F19500										
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
# Park bottom rear left
[gcode_macro PARKREAR]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKREAR
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500		
	RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
	RESTORE_GCODE_STATE NAME=PARKCENTER
	
# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKBED
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500										
	RESTORE_GCODE_STATE NAME=PARKBED



[delayed_gcode NEVERMORE_OFF]
gcode:
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0


# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}
